"""
Django settings for tawssil_backend project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-59^w4!-py5j9=7__(nd053nyq2s+gcu9txmjzyhz0*^r8zdd&8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '10.0.2.2',  # للوصول من محاكي Android
    '192.168.1.5',  # مثال عنوان IP محلي
    '*',  # يسمح بالوصول من أي مضيف - استخدم هذا فقط في بيئة التطوير
]


# Application definition

INSTALLED_APPS = [
    # تطبيقات Django الافتراضية
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # تطبيقات المشروع
    'utilisateurs',
    'paiements',
    'vehicules',
    
    # التطبيقات الجديدة
    'commandes',
    'produits',
    'evaluations',
    'messaging',
    
    # تطبيقات أخرى
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tawssil_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tawssil_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'Tawssil',
        'USER': 'postgres',
        'PASSWORD': 'Ab@2024',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Media files (user-uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# نموذج المستخدم المخصص
AUTH_USER_MODEL = 'utilisateurs.Utilisateur'

# إعدادات الطلب للتحقق من الهوية
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'utilisateurs.authentication.CustomJWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    )
}

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",
    "http://127.0.0.1:8000",
    "http://localhost:3000",  # للتطوير المحلي
    "http://10.0.2.2:8000",   # للوصول من محاكي Android
    "http://192.168.1.5:8000", # نموذج IP محلي
]

# تعديل إضافي لإعدادات CORS
CORS_ORIGIN_ALLOW_ALL = True  # السماح بالوصول من أي مصدر (مهم للتطوير)
CORS_ALLOW_CREDENTIALS = True

# إضافة عناوين تطبيق Flutter
CORS_ORIGIN_WHITELIST = [
    "http://localhost:8000",
    "http://127.0.0.1:8000",
    "http://10.0.2.2:8000",
]

# أضف المزيد من الإعدادات للسماح بالطلبات من تطبيق Flutter
CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "OPTIONS",
]

CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
]

# JWT settings
SIMPLE_JWT = {
    'USER_ID_FIELD': 'id_utilisateur',
    'USER_ID_CLAIM': 'user_id',
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'USER_AUTHENTICATION_RULE': 'utilisateurs.authentication.custom_user_authentication_rule',
}

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'sidahmedmhd07@gmail.com'
EMAIL_HOST_PASSWORD = 'pjpyotqctctfmhrh'
DEFAULT_FROM_EMAIL = 'sidahmedmhd07@gmail.com'
# استخدام وضع تصحيح أخطاء البريد الإلكتروني
EMAIL_DEBUG = True

# احتفظ بهذه الإعدادات معطلة الآن
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # يعرض الرسائل في الطرفية بدلًا من إرسالها فعليًا
# DEFAULT_FROM_EMAIL = 'otpservice@tawssil.com'  # لا يهم في وضع العرض في الطرفية

# SendGrid settings - معطل عمداً لتجنب الازدواجية في إرسال البريد
SENDGRID_API_KEY = ''  # تعطيل SendGrid بتركه فارغاً

# Twilio settings
# في وضع التطوير، يمكن تعيين القيم إلى قيم وهمية أو إلى 'YOUR_TWILIO_SID'
# بهذه الطريقة ستعمل خاصية التطوير التي تعرض الرمز في السجلات بدلاً من إرساله
TWILIO_ACCOUNT_SID = 'AC450ecc6390aa2e96d81b9f10213b8d01'  # قم بتغييرها إلى SID الحقيقي في الإنتاج
TWILIO_AUTH_TOKEN = '6e73473465a21bcedbe2c14f31a4be07'    # قم بتغييرها إلى رمز المصادقة الحقيقي في الإنتاج
TWILIO_PHONE_NUMBER = '+222 41824343'      # قم بتغييرها إلى رقم هاتف Twilio الحقيقي في الإنتاج

# Logging settings
# تكوين السجلات للتحكم في مستوى التفاصيل
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'utilisateurs': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}
