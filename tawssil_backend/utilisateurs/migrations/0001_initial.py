# Generated by Django 5.2 on 2025-05-14 20:03

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id_utilisateur', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(default='temp_user', max_length=150, unique=True)),
                ('email', models.EmailField(default='temp@example.com', max_length=255, unique=True)),
                ('password', models.CharField(default='pbkdf2_sha256$600000$KAESDqxMVPpuHTvJQAFPYA$y2kx39F8Zp0+e3Ih6i5a4rjNEWAj7mD4Jj2YKY6L3zI=', max_length=128, verbose_name='password')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('type_utilisateur', models.CharField(choices=[('Client', 'Client'), ('Livreur', 'Livreur'), ('Chauffeur', 'Chauffeur'), ('Administrateur', 'Administrateur'), ('Fournisseur', 'Fournisseur')], default='Client', max_length=15)),
                ('photo_profile', models.ImageField(blank=True, null=True, upload_to='utilisateurs/photos/profiles')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Administrateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utilisateur', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profil_admin', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Chauffeur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_moyenne', models.FloatField(default=0)),
                ('disponibilite', models.BooleanField(default=False)),
                ('matricule_vehicule', models.CharField(blank=True, max_length=50, null=True)),
                ('photo_vehicule', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/vehicules')),
                ('photo_permis', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/permis')),
                ('photo_carte_grise', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/papiers/carte_grise')),
                ('photo_assurance', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/papiers/assurance')),
                ('photo_vignette', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/papiers/vignette')),
                ('photo_carte_municipale', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/papiers/municipale')),
                ('statut_verification', models.CharField(choices=[('En attente', 'En attente'), ('Approuvé', 'Approuvé'), ('Refusé', 'Refusé')], default='En attente', max_length=20)),
                ('zone_couverture', models.CharField(blank=True, max_length=255, null=True)),
                ('certification_date', models.DateField(blank=True, help_text='تاريخ التحقق من الوثائق والموافقة', null=True)),
                ('raison_refus', models.TextField(blank=True, help_text='سبب رفض التحقق إذا كان الحساب مرفوضًا', null=True)),
                ('type_vehicule', models.CharField(choices=[('Voiture', 'Voiture'), ('Camion', 'Camion')], default='Voiture', max_length=15)),
                ('utilisateur', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profil_chauffeur', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utilisateur', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profil_client', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_fournisseur', models.CharField(choices=[('Restaurant', 'Restaurant'), ('Pharmacie', 'Pharmacie'), ('Supermarché', 'Supermarché')], default='Restaurant', max_length=15)),
                ('nom_commerce', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='fournisseurs/logos')),
                ('adresse_commerce', models.TextField(blank=True, default='', null=True)),
                ('horaires_ouverture', models.TextField(blank=True, null=True)),
                ('utilisateur', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profil_fournisseur', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Livreur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_moyenne', models.FloatField(default=0)),
                ('disponibilite', models.BooleanField(default=False)),
                ('matricule_vehicule', models.CharField(blank=True, max_length=50, null=True)),
                ('photo_vehicule', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/vehicules')),
                ('photo_permis', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/permis')),
                ('photo_carte_grise', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/papiers/carte_grise')),
                ('photo_assurance', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/papiers/assurance')),
                ('photo_vignette', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/papiers/vignette')),
                ('photo_carte_municipale', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/papiers/municipale')),
                ('statut_verification', models.CharField(choices=[('En attente', 'En attente'), ('Approuvé', 'Approuvé'), ('Refusé', 'Refusé')], default='En attente', max_length=20)),
                ('zone_couverture', models.CharField(blank=True, max_length=255, null=True)),
                ('certification_date', models.DateField(blank=True, help_text='تاريخ التحقق من الوثائق والموافقة', null=True)),
                ('raison_refus', models.TextField(blank=True, help_text='سبب رفض التحقق إذا كان الحساب مرفوضًا', null=True)),
                ('type_vehicule', models.CharField(choices=[('Moto', 'Moto'), ('Camionnette', 'Camionnette')], default='Moto', max_length=15)),
                ('utilisateur', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profil_livreur', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OTPCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4)),
                ('identifier', models.CharField(help_text='البريد الإلكتروني أو رقم الهاتف', max_length=255)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('verification_attempts', models.IntegerField(default=0, help_text='عدد محاولات التحقق')),
                ('last_attempt_time', models.DateTimeField(blank=True, help_text='وقت آخر محاولة تحقق', null=True)),
                ('is_blocked', models.BooleanField(default=False, help_text='ما إذا كان الرمز محظوراً بسبب تجاوز عدد المحاولات')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otp_codes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Codes OTP',
                'verbose_name_plural': 'Codes OTP',
            },
        ),
    ]
